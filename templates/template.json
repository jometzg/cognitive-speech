{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storage_account_name": {
            "defaultValue": "",
            "type": "String"
        },
         "connections_storage_key": {
            "defaultValue": "",
            "type": "String"
        },
        "connections_storage_sas": {
            "defaultValue": "",
            "type": "String"
        },
        "cognitive_key": {
            "defaultValue": "",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "azureblob",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "speechstorage",
                "customParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "outlook",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "Outlook.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/outlook')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "starttranscription",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', 'azureblob')]",
                "[resourceId('Microsoft.Web/connections', 'outlook')]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_new_email_arrives_(V2)": {
                            "splitOn": "@triggerBody()?['value']",
                            "metadata": {
                                "Id::AQMkADAwATNiZmYAZC0xZTIxLTVkNmYtMDACLTAwCgAuAAADfMc2vrhOqECCJIcNmiyVbgEAad99FMndb0WERiaORLWMTQAAAgEMAAAA": "Inbox"
                            },
                            "type": "ApiConnectionNotification",
                            "inputs": {
                                "fetch": {
                                    "method": "get",
                                    "pathTemplate": {
                                        "template": "/v2/Mail/OnNewEmail"
                                    },
                                    "queries": {
                                        "fetchOnlyWithAttachment": true,
                                        "folderPath": "Id::AQMkADAwATNiZmYAZC0xZTIxLTVkNmYtMDACLTAwCgAuAAADfMc2vrhOqECCJIcNmiyVbgEAad99FMndb0WERiaORLWMTQAAAgEMAAAA",
                                        "importance": "Any",
                                        "includeAttachments": true
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['outlook']['connectionId']"
                                    }
                                },
                                "subscribe": {
                                    "body": {
                                        "NotificationUrl": "@{listCallbackUrl()}"
                                    },
                                    "method": "post",
                                    "pathTemplate": {
                                        "template": "/MailSubscriptionPoke/$subscriptions"
                                    },
                                    "queries": {
                                        "fetchOnlyWithAttachment": true,
                                        "folderPath": "Id::AQMkADAwATNiZmYAZC0xZTIxLTVkNmYtMDACLTAwCgAuAAADfMc2vrhOqECCJIcNmiyVbgEAad99FMndb0WERiaORLWMTQAAAgEMAAAA",
                                        "importance": "Any"
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "CreateRecordingBlob": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@base64ToBinary(triggerBody()?['Attachments'][0]['ContentBytes'])",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/inbound",
                                            "name": "@variables('guid')",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "CreateReturnAddress": {
                                    "runAfter": {
                                        "CreateRecordingBlob": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@variables('Sender')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/outbound",
                                            "name": "@{variables('guid')}.return.txt",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "CreateReturnAddress": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "contentUrls": [
                                                "[concat('https://', parameters('storage_account_name'), '.blob.core.windows.net/inbound/@{variables(''guid'')}@{variables(''sas'')}')]"
                                            ],
                                            "displayName": "@{variables('guid')}",
                                            "locale": "en-US",
                                            "properties": {
                                                "diarizationEnabled": false,
                                                "profanityFilterMode": "Masked",
                                                "punctuationMode": "DictatedAndAutomatic",
                                                "wordLevelTimestampsEnabled": false
                                            }
                                        },
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "Ocp-Apim-Subscription-Key": "@variables('key')"
                                        },
                                        "method": "POST",
                                        "uri": "[concat('https://' , resourceGroup().location, '.api.cognitive.microsoft.com/speechtotext/v3.0/transcriptions')]"
                                    }
                                }
                            },
                            "runAfter": {
                                "GetKey": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['Subject']",
                                            "Tran"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "CreateGuid": {
                            "runAfter": {
                                "GetAttachmentName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "guid",
                                        "type": "string",
                                        "value": "@{guid()}"
                                    }
                                ]
                            }
                        },
                        "GetAttachmentName": {
                            "runAfter": {
                                "GetSender": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AttachmentName",
                                        "type": "string",
                                        "value": "@{triggerBody()['Attachments'][0].Name}"
                                    }
                                ]
                            }
                        },
                        "GetKey": {
                            "runAfter": {
                                "GetSAS": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "key",
                                        "type": "string",
                                        "value": "[parameters('connections_storage_key')]"
                                    }
                                ]
                            }
                        },
                        "GetSAS": {
                            "runAfter": {
                                "CreateGuid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "sas",
                                        "type": "string",
                                        "value": "[parameters('connections_storage_sas')]"
                                    }
                                ]
                            }
                        },
                        "GetSender": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Sender",
                                        "type": "string",
                                        "value": "@triggerBody()?['From']"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'azureblob')]",
                                "connectionName": "azureblob",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                            },
                            "outlook": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'outlook')]",
                                "connectionName": "outlook",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/outlook')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "webhook",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', 'azureblob')]",
                "[resourceId('Microsoft.Web/connections', 'outlook')]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "invocationId": {
                                            "type": "string"
                                        },
                                        "self": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "GetAttachmentName": {
                            "runAfter": {
                                "GetSAS": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AttachmentName",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "GetSAS": {
                            "runAfter": {
                                "getKey": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "sas",
                                        "type": "string",
                                        "value": "[parameters('connections_storage_sas')]"
                                    }
                                ]
                            }
                        },
                        "GetSender": {
                            "runAfter": {
                                "GetAttachmentName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Sender",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "IfHasABody": {
                            "actions": {
                                "Create_blob": {
                                    "runAfter": {
                                        "HTTPGetTranscription": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('HTTPGetTranscription')?['combinedRecognizedPhrases'][0]['display']",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/outbound",
                                            "name": "@variables('AttachmentName')",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "GetDisplayName": {
                                    "runAfter": {
                                        "HTTPGetSelf": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "AttachmentName",
                                        "value": "@{body('HTTPGetSelf')?['displayName']}"
                                    }
                                },
                                "GetSenderAddress": {
                                    "runAfter": {
                                        "Create_blob": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('/outbound/',variables('AttachmentName'),'.return.txt'))}/content",
                                        "queries": {
                                            "inferContentType": true
                                        }
                                    }
                                },
                                "HTTPGetFiles": {
                                    "runAfter": {
                                        "GetDisplayName": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "Ocp-Apim-Subscription-Key": "@variables('key')"
                                        },
                                        "method": "GET",
                                        "uri": "@{body('HTTPGetSelf')?['links']['files']}"
                                    }
                                },
                                "HTTPGetSelf": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "Ocp-Apim-Subscription-Key": "@variables('key')"
                                        },
                                        "method": "GET",
                                        "uri": "@triggerBody()?['self']"
                                    }
                                },
                                "HTTPGetTranscription": {
                                    "runAfter": {
                                        "HTTPGetFiles": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "@{last(body('HTTPGetFiles')?['values'])['links']['contentUrl']}"
                                    }
                                },
                                "Send_an_email_(V2)": {
                                    "runAfter": {
                                        "GetSenderAddress": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Body": "<p>@{body('HTTPGetTranscription')?['combinedRecognizedPhrases'][0]['display']}</p>",
                                            "Subject": "Speech Transcription",
                                            "To": "@body('GetSenderAddress')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['outlook']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    }
                                }
                            },
                            "runAfter": {
                                "GetSender": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "CheckValidationToken": {
                                        "actions": {
                                            "RespondWithTokenValue": {
                                                "runAfter": {},
                                                "type": "Response",
                                                "kind": "Http",
                                                "inputs": {
                                                    "body": "@triggerOutputs()?['queries']['validationToken']",
                                                    "statusCode": 200
                                                }
                                            }
                                        },
                                        "runAfter": {},
                                        "expression": {
                                            "and": [
                                                {
                                                    "contains": [
                                                        "@triggerOutputs()['queries']",
                                                        "validationToken"
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@equals(triggerBody(), null)",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "getKey": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "key",
                                        "type": "string",
                                        "value": "[parameters('cognitive_key')]"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'azureblob')]",
                                "connectionName": "azureblob",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                            },
                            "outlook": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'outlook')]",
                                "connectionName": "outlook",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/outlook')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
